from typing import NewType, Optional, Tuple

from OCC.Core.gce import *
from OCC.Core.Standard import *
from OCC.Core.NCollection import *
from OCC.Core.gp import *


class gce_ErrorType:
	gce_Done: int = ...
	gce_ConfusedPoints: int = ...
	gce_NegativeRadius: int = ...
	gce_ColinearPoints: int = ...
	gce_IntersectionError: int = ...
	gce_NullAxis: int = ...
	gce_NullAngle: int = ...
	gce_NullRadius: int = ...
	gce_InvertAxis: int = ...
	gce_BadAngle: int = ...
	gce_InvertRadius: int = ...
	gce_NullFocusLength: int = ...
	gce_NullVector: int = ...
	gce_BadEquation: int = ...

class gce_MakeMirror:
	def __init__(self, Point: gp_Pnt) -> None: ...
	def __init__(self, Axis: gp_Ax1) -> None: ...
	def __init__(self, Line: gp_Lin) -> None: ...
	def __init__(self, Point: gp_Pnt, Direc: gp_Dir) -> None: ...
	def __init__(self, Plane: gp_Pln) -> None: ...
	def __init__(self, Plane: gp_Ax2) -> None: ...
	def Operator(self) -> gp_Trsf: ...
	def Value(self) -> gp_Trsf: ...

class gce_MakeMirror2d:
	def __init__(self, Point: gp_Pnt2d) -> None: ...
	def __init__(self, Axis: gp_Ax2d) -> None: ...
	def __init__(self, Line: gp_Lin2d) -> None: ...
	def __init__(self, Point: gp_Pnt2d, Direc: gp_Dir2d) -> None: ...
	def Operator(self) -> gp_Trsf2d: ...
	def Value(self) -> gp_Trsf2d: ...

class gce_MakeRotation:
	def __init__(self, Line: gp_Lin, Angle: float) -> None: ...
	def __init__(self, Axis: gp_Ax1, Angle: float) -> None: ...
	def __init__(self, Point: gp_Pnt, Direc: gp_Dir, Angle: float) -> None: ...
	def Operator(self) -> gp_Trsf: ...
	def Value(self) -> gp_Trsf: ...

class gce_MakeRotation2d:
	def __init__(self, Point: gp_Pnt2d, Angle: float) -> None: ...
	def Operator(self) -> gp_Trsf2d: ...
	def Value(self) -> gp_Trsf2d: ...

class gce_MakeScale:
	def __init__(self, Point: gp_Pnt, Scale: float) -> None: ...
	def Operator(self) -> gp_Trsf: ...
	def Value(self) -> gp_Trsf: ...

class gce_MakeScale2d:
	def __init__(self, Point: gp_Pnt2d, Scale: float) -> None: ...
	def Operator(self) -> gp_Trsf2d: ...
	def Value(self) -> gp_Trsf2d: ...

class gce_MakeTranslation:
	def __init__(self, Vect: gp_Vec) -> None: ...
	def __init__(self, Point1: gp_Pnt, Point2: gp_Pnt) -> None: ...
	def Operator(self) -> gp_Trsf: ...
	def Value(self) -> gp_Trsf: ...

class gce_MakeTranslation2d:
	def __init__(self, Vect: gp_Vec2d) -> None: ...
	def __init__(self, Point1: gp_Pnt2d, Point2: gp_Pnt2d) -> None: ...
	def Operator(self) -> gp_Trsf2d: ...
	def Value(self) -> gp_Trsf2d: ...

class gce_Root:
	def IsDone(self) -> bool: ...
	def Status(self) -> gce_ErrorType: ...

class gce_MakeCirc(gce_Root):
	def __init__(self, A2: gp_Ax2, Radius: float) -> None: ...
	def __init__(self, Circ: gp_Circ, Dist: float) -> None: ...
	def __init__(self, Circ: gp_Circ, Point: gp_Pnt) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt, P3: gp_Pnt) -> None: ...
	def __init__(self, Center: gp_Pnt, Norm: gp_Dir, Radius: float) -> None: ...
	def __init__(self, Center: gp_Pnt, Plane: gp_Pln, Radius: float) -> None: ...
	def __init__(self, Center: gp_Pnt, Ptaxis: gp_Pnt, Radius: float) -> None: ...
	def __init__(self, Axis: gp_Ax1, Radius: float) -> None: ...
	def Operator(self) -> gp_Circ: ...
	def Value(self) -> gp_Circ: ...

class gce_MakeCirc2d(gce_Root):
	def __init__(self, XAxis: gp_Ax2d, Radius: float, Sense: Optional[bool]) -> None: ...
	def __init__(self, Axis: gp_Ax22d, Radius: float) -> None: ...
	def __init__(self, Circ: gp_Circ2d, Dist: float) -> None: ...
	def __init__(self, Circ: gp_Circ2d, Point: gp_Pnt2d) -> None: ...
	def __init__(self, P1: gp_Pnt2d, P2: gp_Pnt2d, P3: gp_Pnt2d) -> None: ...
	def __init__(self, Center: gp_Pnt2d, Radius: float, Sense: Optional[bool]) -> None: ...
	def __init__(self, Center: gp_Pnt2d, Point: gp_Pnt2d, Sense: Optional[bool]) -> None: ...
	def Operator(self) -> gp_Circ2d: ...
	def Value(self) -> gp_Circ2d: ...

class gce_MakeCone(gce_Root):
	def __init__(self, A2: gp_Ax2, Ang: float, Radius: float) -> None: ...
	def __init__(self, Cone: gp_Cone, Point: gp_Pnt) -> None: ...
	def __init__(self, Cone: gp_Cone, Dist: float) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt, P3: gp_Pnt, P4: gp_Pnt) -> None: ...
	def __init__(self, Axis: gp_Ax1, P1: gp_Pnt, P2: gp_Pnt) -> None: ...
	def __init__(self, Axis: gp_Lin, P1: gp_Pnt, P2: gp_Pnt) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt, R1: float, R2: float) -> None: ...
	def Operator(self) -> gp_Cone: ...
	def Value(self) -> gp_Cone: ...

class gce_MakeCylinder(gce_Root):
	def __init__(self, A2: gp_Ax2, Radius: float) -> None: ...
	def __init__(self, Cyl: gp_Cylinder, Point: gp_Pnt) -> None: ...
	def __init__(self, Cyl: gp_Cylinder, Dist: float) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt, P3: gp_Pnt) -> None: ...
	def __init__(self, Axis: gp_Ax1, Radius: float) -> None: ...
	def __init__(self, Circ: gp_Circ) -> None: ...
	def Operator(self) -> gp_Cylinder: ...
	def Value(self) -> gp_Cylinder: ...

class gce_MakeDir(gce_Root):
	def __init__(self, V: gp_Vec) -> None: ...
	def __init__(self, Coord: gp_XYZ) -> None: ...
	def __init__(self, Xv: float, Yv: float, Zv: float) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt) -> None: ...
	def Operator(self) -> gp_Dir: ...
	def Value(self) -> gp_Dir: ...

class gce_MakeDir2d(gce_Root):
	def __init__(self, V: gp_Vec2d) -> None: ...
	def __init__(self, Coord: gp_XY) -> None: ...
	def __init__(self, Xv: float, Yv: float) -> None: ...
	def __init__(self, P1: gp_Pnt2d, P2: gp_Pnt2d) -> None: ...
	def Operator(self) -> gp_Dir2d: ...
	def Value(self) -> gp_Dir2d: ...

class gce_MakeElips(gce_Root):
	def __init__(self, A2: gp_Ax2, MajorRadius: float, MinorRadius: float) -> None: ...
	def __init__(self, S1: gp_Pnt, S2: gp_Pnt, Center: gp_Pnt) -> None: ...
	def Operator(self) -> gp_Elips: ...
	def Value(self) -> gp_Elips: ...

class gce_MakeElips2d(gce_Root):
	def __init__(self, MajorAxis: gp_Ax2d, MajorRadius: float, MinorRadius: float, Sense: Optional[bool]) -> None: ...
	def __init__(self, A: gp_Ax22d, MajorRadius: float, MinorRadius: float) -> None: ...
	def __init__(self, S1: gp_Pnt2d, S2: gp_Pnt2d, Center: gp_Pnt2d) -> None: ...
	def Operator(self) -> gp_Elips2d: ...
	def Value(self) -> gp_Elips2d: ...

class gce_MakeHypr(gce_Root):
	def __init__(self, A2: gp_Ax2, MajorRadius: float, MinorRadius: float) -> None: ...
	def __init__(self, S1: gp_Pnt, S2: gp_Pnt, Center: gp_Pnt) -> None: ...
	def Operator(self) -> gp_Hypr: ...
	def Value(self) -> gp_Hypr: ...

class gce_MakeHypr2d(gce_Root):
	def __init__(self, S1: gp_Pnt2d, S2: gp_Pnt2d, Center: gp_Pnt2d) -> None: ...
	def __init__(self, MajorAxis: gp_Ax2d, MajorRadius: float, MinorRadius: float, Sense: bool) -> None: ...
	def __init__(self, A: gp_Ax22d, MajorRadius: float, MinorRadius: float) -> None: ...
	def Operator(self) -> gp_Hypr2d: ...
	def Value(self) -> gp_Hypr2d: ...

class gce_MakeLin(gce_Root):
	def __init__(self, A1: gp_Ax1) -> None: ...
	def __init__(self, P: gp_Pnt, V: gp_Dir) -> None: ...
	def __init__(self, Lin: gp_Lin, Point: gp_Pnt) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt) -> None: ...
	def Operator(self) -> gp_Lin: ...
	def Value(self) -> gp_Lin: ...

class gce_MakeLin2d(gce_Root):
	def __init__(self, A: gp_Ax2d) -> None: ...
	def __init__(self, P: gp_Pnt2d, V: gp_Dir2d) -> None: ...
	def __init__(self, A: float, B: float, C: float) -> None: ...
	def __init__(self, Lin: gp_Lin2d, Dist: float) -> None: ...
	def __init__(self, Lin: gp_Lin2d, Point: gp_Pnt2d) -> None: ...
	def __init__(self, P1: gp_Pnt2d, P2: gp_Pnt2d) -> None: ...
	def Operator(self) -> gp_Lin2d: ...
	def Value(self) -> gp_Lin2d: ...

class gce_MakeParab(gce_Root):
	def __init__(self, A2: gp_Ax2, Focal: float) -> None: ...
	def __init__(self, D: gp_Ax1, F: gp_Pnt) -> None: ...
	def Operator(self) -> gp_Parab: ...
	def Value(self) -> gp_Parab: ...

class gce_MakeParab2d(gce_Root):
	def __init__(self, MirrorAxis: gp_Ax2d, Focal: float, Sense: Optional[bool]) -> None: ...
	def __init__(self, A: gp_Ax22d, Focal: float) -> None: ...
	def __init__(self, D: gp_Ax2d, F: gp_Pnt2d, Sense: Optional[bool]) -> None: ...
	def __init__(self, S1: gp_Pnt2d, Center: gp_Pnt2d, Sense: Optional[bool]) -> None: ...
	def Operator(self) -> gp_Parab2d: ...
	def Value(self) -> gp_Parab2d: ...

class gce_MakePln(gce_Root):
	def __init__(self, A2: gp_Ax2) -> None: ...
	def __init__(self, P: gp_Pnt, V: gp_Dir) -> None: ...
	def __init__(self, A: float, B: float, C: float, D: float) -> None: ...
	def __init__(self, Pln: gp_Pln, Point: gp_Pnt) -> None: ...
	def __init__(self, Pln: gp_Pln, Dist: float) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt, P3: gp_Pnt) -> None: ...
	def __init__(self, P1: gp_Pnt, P2: gp_Pnt) -> None: ...
	def __init__(self, Axis: gp_Ax1) -> None: ...
	def Operator(self) -> gp_Pln: ...
	def Value(self) -> gp_Pln: ...
